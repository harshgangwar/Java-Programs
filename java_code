1. Check if String Contains another String : String substring in Java

public class Main
 {

public static void main(String... harsh) 
{
String haystack = “Digital India ,Make in India”;
String needle1 = “Java”;

int index1 = haystack.indexOf(needle1);

if (index1 != -1)
System.out.println(“The string contains the substring ” + needle1);
else
System.out.println(“The string does not contain the substring ” + needle1);

}
}



2.Best logic for- To find the first non repeating character in a string (Java)

public class FirstNonRepeatedCharacter
 {

public static void main(String... harsh)
 {

String input = “teeter”;

for (int i = 0; i < input.length(); i++) {
char c = input.charAt(i);
if (input.indexOf(c) == input.lastIndexOf(c)) {
System.out.println(“the first non repeated character is: ” + c);
break;
}
}
}
}



3.Count the frequency of each word in a string.

import java.util.Scanner;
class WrdConut
{
static int flag;
public static void main(String… harsh)
{
Scanner sc=new Scanner(System.in);
String in=sc.nextLine();
String arr[]=in.split(” “);
for(int i=0;i<arr.length-1;i++)
{
flag=1;
if(arr[i]!=”*”)
for(int j=i+1;j<arr.length;j++)
{
if(arr[j]!=”*”)
{
if(arr[i].compareTo(arr[j])==0)
{
flag++; arr[j]=”*”;
}
}
}
if(arr[i]!=”*”)
System.out.println(“freq of word ” + arr[i] + ” = ” + flag );
}
if(arr[arr.length-1]!=”*”)
System.out.println(“freq of word ” + arr[arr.length-1] + ” = ” + flag);
}
}



4.Count the frequency of each character in a given string with O(n) complexity .

import java.util.Scanner;
class Ass4
{
static int arr[]=new int[52];
static int t,d,te;
static char ch;
public static void main(String args[])
{
Scanner sc=new Scanner(System.in);
String in=sc.nextLine();

for(int i=0;i<in.length();i++)
{
//flag=0;
ch=in.charAt(i);
if(ch>=65&&ch<=90&&ch!=32)
{
// t=ch;
d=ch-65;
arr[d]++;
}
else if(ch>=97&&ch<=122&&ch!=32)
{
d=ch-97+26;
arr[d]++;
}

}
for(int j=0;j<52;j++)
{
if(arr[j]!=0)
{
te=j;
System.out.println((char)(te<26?te+65:te+97-26 ” ” + arr[j] );
}
}
}
}


5.A Normal Collection Program in java using List interface.

import java.util.*;
public class CollectionDemo
{
public static void main(String… harsh)
{
List<Emp> al=new LinkedList<Emp>();
Emp e1=new Emp(1001,”harsh”,23);
Emp e2=new Emp(1002,”gangwar”,25);
Emp e3=new Emp(1003,”faffa”,56);
al.add(e1);
al.add(e2);
al.add(e3);

System.out.println(“\nusing Iterator”);
Iterator i=al.iterator();
while(i.hasNext())
{

Emp ee=(Emp)i.next();
System.out.println(ee.id +” ” + ee.name + ” ” + ee.age + ” “);
}
System.out.println(” \nusing foreach loop”);

for(Emp obj:al)
System.out.println(obj.id + ” “+obj.name+” “+obj.age);//.id + ” ” + obj.name +” ” + obj.age + ” “);
}
}

class Emp
{
int id;
String name;
int age;
Emp(int id,String name,int age)
{
this.id=id;
this.name=name;
this.age=age;

}

}


6.Write a program to replace a substring with “**…” in a given string.

import java.util.Scanner;
class StringReplace
{
static String t=”*”,str1,str2;
public static void main(String… harsh)
{

System.out.println(“enter a string”);
Scanner sc=new Scanner(System.in);
str1=sc.nextLine();
//System.out.println(str1);
System.out.println(“\nenter a sub string”);
str2=sc.nextLine();
//System.out.println(str2);
int in=str1.indexOf(str2);
if(in==-1)
{
System.out.println(“word is not found”);
System.exit(0);

}

else
{
for(int i=0;i<str2.length()-1;i++)
t+=”*”;

System.out.println(“output\n” + str1.replace(str2,t));

}


7.Sort a single String in Java

import java.util.*;
class SortStri
{
public static void main(String… harsh)
{
Scanner sc=new Scanner(System.in);
String in=sc.nextLine();
char ch[]=in.toCharArray();
Arrays.sort(ch);
String s=new String(ch);
System.out.println(s);
}

}



8.write a program to remove all duplicates elements in a string.

/*import java.util.*;
class Dupli
{

public static void removeDuplicateString2(final String input)
{

final Set<Character> set = new LinkedHashSet<>();
for (int i = 0; i < input.length(); i++)
set.add(input.charAt(i));
final StringBuilder stringBuilder = new StringBuilder(set.size());
for (final Character character : set)
stringBuilder.append(character);
System.out.println(stringBuilder);

}

public static void main(String… harsh)
{

removeDuplicateString2(“harshhh ggangwarr”);
}

}
*/
import java.util.*;
class removeDuplicate
{
public String remove(String inputString)
{
String result = “”;
Set<String> inputSet= new LinkedHashSet<String>(); //LinkedHashSet maintains the order in which elements are inserted
for(int i=0;i<inputString.length();i++)
{
inputSet.add(String.valueOf(inputString.charAt(i)));
}
for(String a: inputSet)
{
result += a;
}
return result;
}
public static void main(String… harsh)
{
removeDuplicate rd=new removeDuplicate();
System.out.println(rd.remove(“abdacdabcd”));
}

}




9.Find the occurrence of each character in a string.

class SingleCount
{
static int i,flag;
static char ch;
static void func(String s)
{
int[] arr=new int[s.length()];
for(int i=0;i<arr.length;i++)
{
arr[i]=s.charAt(i);
}
for(int i=0;i<s.length();i++)
{
flag=0;
ch=s.charAt(i);
for(int j=0;j<s.length();j++)
{
if(ch==arr[j])
{
flag++;
arr[j]=’\u0000′;
}
}

if(flag>0)
System.out.println(ch+”=”+flag);
}
}
public static void main(String… harsh)
{
func(“HHarsh gangwar”);

}
}